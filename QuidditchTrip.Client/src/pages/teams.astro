---
import Layout from '../layouts/Layout.astro'
import { get, post } from '../scripts/request.js'
import '../styles/global.css'
const data = Astro.locals
---

<Layout>
	<div class="mx-auto mt-32">
		<h1 class="text-center text-2xl">QuidditchTrip</h1>
		<form id="team-form">
			<input
				type="text"
				id="team-1"
				placeholder="Enter team name"
				class="mx-auto mt-4 block w-1/2 rounded border border-gray-300 px-4 py-2 focus:border-blue-500 focus:outline-none"
			/>
			<input
				type="text"
				id="team-2"
				placeholder="Enter team name 2"
				class="mx-auto mt-4 block w-1/2 rounded border border-gray-300 px-4 py-2 focus:border-blue-500 focus:outline-none"
			/>
			<input
				type="submit"
				class="mx-auto mt-4 block rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600"
				value="Start Game"
			/>
		</form>
	</div>
	<Layout />

	<script>
		import { post } from '../scripts/request.js'
		var baseUrl = 'https://api-quidditchtrip.nolanmiller.me'

		document.getElementById('team-form').addEventListener('submit', async function (event) {
			event.preventDefault()
			const teamNames = []
			const teams = []

			// @ts-ignore
			teamNames.push(document.getElementById('team-1').value.trim())
			// @ts-ignore
			teamNames.push(document.getElementById('team-2').value.trim())

			for (let i = 0; i < teamNames.length; i++) {
				const response = await post('/teams/create', [teamNames[i]])
				localStorage.setItem(`team${i + 1}key`, response.data.teamKey)
				teams.push(response.data)
			}
			if (teams.length != 2) {
				return alert('Unable to create teams. Please try again.')
			}

			var gameResponse = await post('/games/teams', [teams[0].teamKey, teams[1].teamKey])
			if (!gameResponse.wasSuccessful) {
				return alert('Failed to create game. Please try again.')
			}

			localStorage.setItem('gameKey', gameResponse.data.gameKey)
			window.location.href = `/game?gameKey=${gameResponse.data.gameKey}`
		})
	</script>
</Layout>
